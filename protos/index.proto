syntax = "proto3";

package ipc_pubsub;

// Storage for actual IPC messages, may contain inline data
message MetadataMessage {
  string topic = 1;

  // if the message is small then it will be inlined here
  bytes inlined = 2;

  // TODO(micah) add send timestamp
};

enum NodeOperation {
  NODE_UNSET = 0;
  JOIN = 1;
  LEAVE = 2;
};

enum TopicOperation {
  TOPIC_UNSET = 0;
  ANNOUNCE = 1; // i.e. I'm going to publish
  RETRACT = 2;  // i.e. I won't publish again
  SUBSCRIBE = 3;
  UNSUBSCRIBE = 4;
};

message NodeChange {
  uint64 id = 1;
  NodeOperation op = 2;
  string name = 3;
  string address = 4; // named unix domain socket to send updates to
};

message TopicChange {
  string name = 1;
  string mime = 2; // only used by announce

  uint64 node_id = 3;
  TopicOperation op = 4;
};

message TopologyMessage {
  // sequences are minted by the server, when sending from client to server seq
  // should be 0, in a message containing a digest, the seq will be the maximum
  // value in the digest
  uint64 seq = 1;

  oneof Op {
    NodeChange node_change = 3;
    TopicChange topic_change = 4;
  };
};

syntax = "proto3";

package ipc_pubsub;
message InFlight {
  string topic = 1;

  // shared memory containing the data
  string payload_name = 2;
};

message Node {
  string name = 1;
  uint64 id = 2;
  string notify = 3; // name of OS semaphore to up when sending a message
  int32 pid = 4;     // used to clean up dead nodes

  // Messages that need to be processed
  repeated InFlight in_flight = 10;
};

message Topic {
  string name = 1;

  // if the topic contains protobuf then this will be the type infor otherwise
  // a mimetype
  string mime = 2;

  // node ids of topic users
  repeated uint64 publishers = 3;
  repeated uint64 subscribers = 4;
};

message Index {
  repeated Node nodes = 1;
  repeated Topic topics = 2;
}

enum NodeOperation {
  NODE_UNSET = 0;
  JOIN = 1;
  LEAVE = 2;
};

enum TopicOperation {
  TOPIC_UNSET = 0;
  ANNOUNCE = 1; // i.e. I'm going to publish
  RETRACT = 2;  // i.e. I won't publish again
  SUBSCRIBE = 3;
  UNSUBSCRIBE = 4;
};

message NodeChange {
  uint64 id = 1;
  NodeOperation op = 2;
  string name = 3;
  string address = 4; // named unix domain socket to send updates to
};

message TopicChange {
  string name = 1;
  string mime = 2; // only used by announce

  uint64 node_id = 3;
  TopicOperation op = 4;
};

message TopologyMessage {
  repeated NodeChange node_changes = 1;
  repeated TopicChange topic_changes = 2;
};
